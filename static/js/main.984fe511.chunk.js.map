{"version":3,"sources":["components/PasswordInfo/index.js","components/Message/index.js","components/Characters/index.js","pages/Main.js","App.js","reportWebVitals.js","index.js"],"names":["PasswordInfo","useState","password","setPassword","passwordLength","setPasswordLength","includeUppercase","setIncludeUppercase","includeLowercase","setIncludeLowercase","includeNumbers","setIncludeNumbers","includeSymbols","setIncludeSymbols","createPassword","characterList","characterListLength","length","i","characterIndex","Math","round","random","charAt","notify","message","hasError","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","className","onClick","e","newTextArea","document","createElement","innerText","body","appendChild","select","execCommand","remove","copyToClipboard","htmlFor","Slider","defaultValue","valueLabelDisplay","onChange","target","value","id","name","max","Switch","checked","type","newestOnTop","rtl","pauseOnFocusLoss","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.984fe511.chunk.js","sourcesContent":["import Slider from \"@mui/material/Slider\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport React, { useState } from \"react\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"../../App.css\";\r\nimport {\r\n  numbers,\r\n  upperCaseLetters,\r\n  lowerCaseLetters,\r\n  specialCharacters,\r\n} from \"../Characters\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { COPY_SUCCESS } from \"../Message\";\r\n\r\nfunction PasswordInfo() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordLength, setPasswordLength] = useState(20);\r\n  const [includeUppercase, setIncludeUppercase] = useState(false);\r\n  const [includeLowercase, setIncludeLowercase] = useState(false);\r\n  const [includeNumbers, setIncludeNumbers] = useState(false);\r\n  const [includeSymbols, setIncludeSymbols] = useState(false);\r\n\r\n  const handleGeneratePassword = (e) => {\r\n    if (\r\n      !includeUppercase &&\r\n      !includeLowercase &&\r\n      !includeNumbers &&\r\n      !includeSymbols\r\n    ) {\r\n      notify(\"You must Select atleast one option\", true);\r\n    }\r\n    let characterList = \"\";\r\n\r\n    if (includeLowercase) {\r\n      characterList = characterList + lowerCaseLetters;\r\n    }\r\n\r\n    if (includeUppercase) {\r\n      characterList = characterList + upperCaseLetters;\r\n    }\r\n\r\n    if (includeNumbers) {\r\n      characterList = characterList + numbers;\r\n    }\r\n\r\n    if (includeSymbols) {\r\n      characterList = characterList + specialCharacters;\r\n    }\r\n\r\n    setPassword(createPassword(characterList));\r\n  };\r\n  const createPassword = (characterList) => {\r\n    let password = \"\";\r\n    const characterListLength = characterList.length;\r\n\r\n    for (let i = 0; i < passwordLength; i++) {\r\n      const characterIndex = Math.round(Math.random() * characterListLength);\r\n      password = password + characterList.charAt(characterIndex);\r\n    }\r\n    return password;\r\n  };\r\n\r\n  const copyToClipboard = () => {\r\n    const newTextArea = document.createElement(\"textarea\");\r\n    newTextArea.innerText = password;\r\n    document.body.appendChild(newTextArea);\r\n    newTextArea.select();\r\n    document.execCommand(\"copy\");\r\n    newTextArea.remove();\r\n  };\r\n\r\n  const notify = (message, hasError = false) => {\r\n    if (hasError) {\r\n      toast.error(message, {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      toast(message, {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCopyPassword = (e) => {\r\n    if (password === \"\") {\r\n      notify(\"Nothing To Copy\", true);\r\n    } else {\r\n      copyToClipboard();\r\n      notify(COPY_SUCCESS);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"generator\">\r\n        <h2 className=\"generator__header\">Password Generator</h2>\r\n        <div className=\"generator__password\">\r\n          <h3>{password}</h3>\r\n          <button onClick={handleCopyPassword} className=\"copy__btn\">\r\n            <i className=\"far fa-clipboard\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password-strength\">Password length</label>\r\n          <Slider\r\n            className=\"switch\"\r\n            defaultValue=\"15\"\r\n            valueLabelDisplay=\"auto\"\r\n            onChange={(e) => setPasswordLength(e.target.value)}\r\n            id=\"password-strength\"\r\n            name=\"password-strength\"\r\n            max=\"15\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"lineBreak\" />\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"uppercase-letters\">Include Uppercase</label>\r\n          <Switch\r\n            className=\"switch\"\r\n            checked={includeUppercase}\r\n            onChange={(e) => setIncludeUppercase(e.target.checked)}\r\n            type=\"checkbox\"\r\n            id=\"uppercase-letters\"\r\n            name=\"uppercase-letters\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"lineBreak\" />\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"lowercase-letters\">Include Lowercase</label>\r\n          <Switch\r\n            className=\"switch\"\r\n            checked={includeLowercase}\r\n            onChange={(e) => setIncludeLowercase(e.target.checked)}\r\n            type=\"checkbox\"\r\n            id=\"lowercase-letters\"\r\n            name=\"lowercase-letters\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"lineBreak\" />\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"include-numbers\">Include Numbers</label>\r\n          <Switch\r\n            className=\"switch\"\r\n            checked={includeNumbers}\r\n            onChange={(e) => setIncludeNumbers(e.target.checked)}\r\n            type=\"checkbox\"\r\n            id=\"include-numbers\"\r\n            name=\"include-numbers\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"lineBreak\" />\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"include-symbols\">Include Symbols</label>\r\n          <Switch\r\n            className=\"switch\"\r\n            checked={includeSymbols}\r\n            onChange={(e) => setIncludeSymbols(e.target.checked)}\r\n            type=\"checkbox\"\r\n            id=\"include-symbols\"\r\n            name=\"include-symbols\"\r\n          />\r\n        </div>\r\n\r\n        <button onClick={handleGeneratePassword} className=\"generator__btn\">\r\n          Generate Password\r\n        </button>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PasswordInfo;\r\n","export const COPY_SUCCESS = 'Password successfully copied to clipboard';","export const numbers = '0123456789';\r\nexport const upperCaseLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nexport const lowerCaseLetters = 'abcdefghijklmnopqrstuvwxyz';\r\nexport const specialCharacters = '~!@#$%^&*()_+-={}[]|<>?,./';","import PasswordInfo from \"../components/PasswordInfo\";\r\n\r\nfunction Main() {\r\n    return (\r\n        <div className=\"main\">\r\n            <PasswordInfo />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import \"./App.css\";\nimport Main from \"./pages/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}